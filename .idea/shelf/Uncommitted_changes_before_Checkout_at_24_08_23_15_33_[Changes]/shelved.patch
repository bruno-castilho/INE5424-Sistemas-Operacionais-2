Index: include/system/config.h
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>// EPOS Configuration Engine\n\n#ifndef __config_h\n#define __config_h\n\n//============================================================================\n// ARCHITECTURE, MACHINE, AND APPLICATION SELECTION\n// This section is generated automatically from makedefs by $EPOS/etc/makefile\n//============================================================================\n#define SMOD xxx\n#define ARCH xxx\n#define MACH xxx\n#define MMOD xxx\n#define APPL xxx\n#define __mode_xxx__\n#define __arch_xxx__\n#define __mach_xxx__\n#define __mmod_xxx__\n\n//============================================================================\n// NAMESPACES AND DEFINITIONS\n//============================================================================\nnamespace EPOS {\n    namespace S {\n        namespace U {}\n        using namespace U;\n    }\n}\n\n#define __BEGIN_API             namespace EPOS {\n#define __END_API               }\n#define _API                    ::EPOS\n\n#define __BEGIN_UTIL            namespace EPOS { namespace S { namespace U {\n#define __END_UTIL              }}}\n#define __USING_UTIL            using namespace S::U;\n#define _UTIL                   ::EPOS::S::U\n\n#define __BEGIN_SYS             namespace EPOS { namespace S {\n#define __END_SYS               }}\n#define __IN_SYS(X)             namespace EPOS { namespace S { X }}\n#define __USING_SYS             using namespace EPOS::S;\n#define _SYS                    ::EPOS::S\n\n#ifndef __mode_kernel__\nnamespace EPOS {\n    using namespace S;\n    using namespace S::U;\n}\n#endif\n\n#define __HEADER_ARCH(X)        <architecture/ARCH/ARCH/**/_##X.h>\n#define __HEADER_MACH(X)        <machine/MACH/MACH/**/_##X.h>\n#define __HEADER_MMOD(X)        <machine/MACH/MMOD/MMOD/**/_##X.h>\n#define __HEADER_TRAN(X)        <transducer/X.h>\n#define __APPL_TRAITS_T(X)      <../app/X/X##_traits.h>\n#define __APPL_TRAITS(X)        __APPL_TRAITS_T(X)\n\n#define __ARCHITECTURE_TRAITS_H __HEADER_ARCH(traits)\n#define __MACHINE_TRAITS_H      __HEADER_MMOD(traits)\n#define __APPLICATION_TRAITS_H  __APPL_TRAITS(APPL)\n\n#define ASM                     __asm__ __volatile__\n\n//============================================================================\n// ASSERT (for pre and post conditions)\n//============================================================================\n#define assert(expr)    ((expr) ? static_cast<void>(0) : Assert::fail (#expr, __FILE__, __LINE__, __PRETTY_FUNCTION__))\n//#define assert(expr)    (static_cast<void>(0))\n\n//============================================================================\n// CONFIGURATION\n//============================================================================\n#include <system/meta.h>\n#include <system/traits.h>\n#include __APPLICATION_TRAITS_H\n#include <system/types.h>\n\n#define __CPU_H                 __HEADER_ARCH(cpu)\n#define __MMU_H                 __HEADER_ARCH(mmu)\n\n#define __MACH_H                __HEADER_MACH(machine)\n#define __IC_H                  __HEADER_MACH(ic)\n#define __TIMER_H               __HEADER_MACH(timer)\n\n#ifdef __mmod_legacy_pc__\n#define __TSC_H                 __HEADER_ARCH(tsc)\n#define __PMU_H                 __HEADER_ARCH(pmu)\n\n#define __PCI_H                 __HEADER_MACH(pci)\n#define __RTC_H                 __HEADER_MACH(rtc)\n#define __EEPROM_H              __HEADER_MACH(eeprom)\n#define __UART_H                __HEADER_MACH(uart)\n#define __DISPLAY_H             __HEADER_MACH(display)\n#define __KEYBOARD_H            __HEADER_MACH(keyboard)\n\n#define __KEYPAD_H              __HEADER_TRAN(keypad)\n\n#endif\n\n#ifdef __mmod_lm3s811__\n#define __cortex_m__\n#define __cortex_m3__\n#define __TSC_H                 __HEADER_ARCH(tsc)\n\n#define __UART_H                __HEADER_MACH(uart)\n#define __GPIO_H                __HEADER_MACH(gpio)\n\n#endif\n\n#ifdef __mmod_emote3__\n#define __cortex_m__\n#define __cortex_m3__\n#define __TSC_H                 __HEADER_ARCH(tsc)\n\n#define __EEPROM_H              __HEADER_MACH(eeprom)\n#define __UART_H                __HEADER_MACH(uart)\n#define __SPI_H                 __HEADER_MACH(spi)\n#define __RS485_H               __HEADER_MACH(rs485)\n#define __USB_H                 __HEADER_MACH(usb)\n#define __I2C_H                 __HEADER_MACH(i2c)\n#define __GPIO_H                __HEADER_MACH(gpio)\n#define __ADC_H                 __HEADER_MACH(adc)\n#define __PWM_H                 __HEADER_MACH(pwm)\n#define __WATCHDOG_H            __HEADER_MACH(watchdog)\n\n#define __ACCELEROMETER_H       __HEADER_TRAN(accelerometer)\n#define __GYROSCOPE_H           __HEADER_TRAN(gyroscope)\n#define __CO2_SENSOR_H          __HEADER_TRAN(co2_sensor)\n#define __PLUVIOMETER_H         __HEADER_TRAN(pluviometer)\n#define __PRESSURE_SENSOR_H     __HEADER_TRAN(pressure_sensor)\n#define __THERMOMETER_H         __HEADER_TRAN(thermometer)\n#define __HYGROMETER_H          __HEADER_TRAN(hygrometer)\n#endif\n\n#ifdef __mmod_zynq__\n#define __cortex_a__\n#define __cortex_a9__\n#define __TSC_H                 __HEADER_ARCH(tsc)\n#define __PMU_H                 __HEADER_ARCH(pmu)\n\n#define __UART_H                __HEADER_MACH(uart)\n#define __NIC_H                 __HEADER_MACH(nic)\n#define __ethernet__\n#define __AES_H                 __HEADER_MACH(aes)\n#define __ipv4__\n#endif\n\n#ifdef __mmod_realview_pbx__\n#define __cortex_a__\n#define __cortex_a9__\n#define __realview_pbx__\n#define __TSC_H                 __HEADER_ARCH(tsc)\n#define __PMU_H                 __HEADER_ARCH(pmu)\n\n#define __UART_H                __HEADER_MACH(uart)\n#endif\n\n#ifdef __mmod_raspberry_pi3__\n#define __cortex_a__\n#define __cortex_a53__\n#define __TSC_H                 __HEADER_ARCH(tsc)\n#define __PMU_H                 __HEADER_ARCH(pmu)\n\n#define __UART_H                __HEADER_MACH(uart)\n#endif\n\n#ifdef __mach_riscv__\n#define __riscv__\n#define __TSC_H                 __HEADER_ARCH(tsc)\n\n#define __UART_H                __HEADER_MACH(uart)\n#endif\n\n\n//============================================================================\n// THINGS EVERBODY NEEDS\n//============================================================================\n#include <utility/ostream.h>\n#include <utility/debug.h>\n\n#endif\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/include/system/config.h b/include/system/config.h
--- a/include/system/config.h	(revision 0f540f2a973b791c676be6031eaf44446bd011e6)
+++ b/include/system/config.h	(date 1692901837943)
@@ -7,15 +7,15 @@
 // ARCHITECTURE, MACHINE, AND APPLICATION SELECTION
 // This section is generated automatically from makedefs by $EPOS/etc/makefile
 //============================================================================
-#define SMOD xxx
-#define ARCH xxx
-#define MACH xxx
-#define MMOD xxx
-#define APPL xxx
-#define __mode_xxx__
-#define __arch_xxx__
-#define __mach_xxx__
-#define __mmod_xxx__
+#define SMOD library
+#define ARCH rv64
+#define MACH riscv
+#define MMOD sifive_u
+#define APPL hello
+#define __library__
+#define __rv64__
+#define __riscv__
+#define __sifive_u__
 
 //============================================================================
 // NAMESPACES AND DEFINITIONS
